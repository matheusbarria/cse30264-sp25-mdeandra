Ly8gIEdvIElyaXNoIGNsaWVudAojaW5jbHVkZSA8em1xLmg+CiNpbmNsdWRlIDxzdHJpbmcuaD4K
I2luY2x1ZGUgPHN0ZGlvLmg+CiNpbmNsdWRlIDx1bmlzdGQuaD4KI2luY2x1ZGUgPHN0ZGxpYi5o
PgoKI2RlZmluZSBaTVFfU0VSVkVSX1BPUlQgNDAwMDAKCmludCBtYWluICh2b2lkKQp7CiAgICBp
bnQgcmM7ICAgICAgICAgICAgIC8qIFNhdmUgdGhlIHJldHVybiBjb2RlICovCgogICAgcHJpbnRm
ICgiQ29ubmVjdGluZyB0byBnbyBpcmlzaCBzZXJ2ZXIgb24gcG9ydCAlZCAuLi4gXG4iLCBaTVFf
U0VSVkVSX1BPUlQpOwogICAgdm9pZCAqY29udGV4dCA9IHptcV9jdHhfbmV3ICgpOwogICAgdm9p
ZCAqcmVxdWVzdGVyID0gem1xX3NvY2tldCAoY29udGV4dCwgWk1RX1JFUSk7CgogICAgY2hhciBw
c3pSZXF1ZXN0WzI1XTsKICAgIHNwcmludGYocHN6UmVxdWVzdCwgInRjcDovL2xvY2FsaG9zdDol
ZCIsIFpNUV9TRVJWRVJfUE9SVCk7CgogICAgcmMgPSB6bXFfY29ubmVjdCAocmVxdWVzdGVyLCBw
c3pSZXF1ZXN0KTsKCiAgICBpZihyYyA9PSAwKQogICAgewogICAgICAgIC8qIElmIHRoaXMgcHJp
bnRmIGlzIHByaW50ZWQsIHRoZSBuZXR3b3JrIGlzIHdvcmtpbmcgKi8KICAgICAgICBwcmludGYo
IiAgU3VjY2Vzc2Z1bGx5IGNvbm5lY3RlZCBvbiBwb3J0ICVkXG4iLCBaTVFfU0VSVkVSX1BPUlQp
OwogICAgfQogICAgZWxzZSAKICAgIHsKICAgICAgICBwcmludGYoIiAgTmV0d29yayBjb25uZWN0
aW9uIGZhaWxlZFxuIik7CiAgICAgICAgZXhpdCgtMSk7CiAgICB9CgogICAgaW50IHJlcXVlc3Rf
bmJyOwogICAgY2hhciBidWZmZXIgWzIwXTsKCiAgICBmb3IgKHJlcXVlc3RfbmJyID0gMDsgcmVx
dWVzdF9uYnIgIT0gMTA7IHJlcXVlc3RfbmJyKyspIHsKICAgICAgICBwcmludGYgKCJTZW5kaW5n
IGdvICVkLi4uXG4iLCByZXF1ZXN0X25icik7CiAgICAgICAgem1xX3NlbmQgKHJlcXVlc3Rlciwg
ImdvIiwgMiwgMCk7CiAgICAgICAgbWVtc2V0KGJ1ZmZlciwgMCwgMjApOwogICAgICAgIHptcV9y
ZWN2IChyZXF1ZXN0ZXIsIGJ1ZmZlciwgMjAsIDApOwogICAgICAgIHByaW50ZiAoIlJlY2VpdmVk
ICVzIChNZXNzYWdlICVkKVxuIiwgYnVmZmVyLCByZXF1ZXN0X25icik7CiAgICB9CiAgICB6bXFf
Y2xvc2UgKHJlcXVlc3Rlcik7CiAgICB6bXFfY3R4X2Rlc3Ryb3kgKGNvbnRleHQpOwogICAgcmV0
dXJuIDA7Cn0K
